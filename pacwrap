#!/usr/bin/env bash

# Function to display the Arch name in blue
arch_name() {
  echo -e "\033[1;34m
           █████╗ ██████╗  ██████╗██╗  ██╗
          ██╔══██╗██╔══██╗██╔════╝██║  ██║
          ███████║██████╔╝██║     ███████║
          ██╔══██║██╔══██╗██║     ██╔══██║
          ██║  ██║██║  ██║╚██████╗██║  ██║
          ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝
        ██╗     ██╗███╗   ██╗██╗   ██╗██╗  ██╗
        ██║     ██║████╗  ██║██║   ██║╚██╗██╔╝
        ██║     ██║██╔██╗ ██║██║   ██║ ╚███╔╝ 
        ██║     ██║██║╚██╗██║██║   ██║ ██╔██╗ 
        ███████╗██║██║ ╚████║╚██████╔╝██╔╝ ██╗
        ╚══════╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚═╝  ╚═╝
  \033[0m"
}

# Function to display a blinking Pac-Man word in cyan
pac_word() {
  echo -e "\033[1;5;36m
    ░       ░░░░      ░░░░      ░░░  ░░░░  ░░░      ░░░   ░░░  ░
    ▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒   ▒▒   ▒▒  ▒▒▒▒  ▒▒    ▒▒  ▒
    ▓       ▓▓▓  ▓▓▓▓  ▓▓  ▓▓▓▓▓▓▓▓        ▓▓  ▓▓▓▓  ▓▓  ▓  ▓  ▓
    █  ████████        ██  ████  ██  █  █  ██        ██  ██    █
    █  ████████  ████  ███      ███  ████  ██  ████  ██  ███   █
    \033[0m"
  sleep 0.5
}

# Function to display the Pac-Man logo in yellow
pac_logo() {
  echo -e "\033[1;33m
            ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣤⣤⣤⣤⣤⣤⣤⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠀⠀⠀⠀⢀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠛⠻⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⡿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣤⣴⣿⣿⣿⣿⣿⡿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⠁⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀
            ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠋⠁⠀⠀⠀⠀⠀⣴⣿⣿⣿⣦⠀⠀⠀⣼⣿⣿⣿⡆⠀⠀⠀⣴⣿⣿⣿⣆
            ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⡟⠀⠀⠀⢿⣿⣿⣿⠏⠀⠀⠀⢿⣿⣿⣿⠏
            ⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣄⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠉⠉⠁⠀
            ⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠀⠀⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠀⠀⠀⠀⠉⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠛⠻⠿⠿⠟⠛⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  \033[0m"
}

# Ghosts display in different colors
ghost="
              ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
              ⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀
              ⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀
              ⠀⠀⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⠀⠀
              ⠀⠀⣿⣿⣿⣿⡟⠛⠛⠛⠛⣿⣿⣿⣿⣿⣿⣿⣿⠛⠛⠛⠛⢻⣿⣿⣿⣿⠀⠀
              ⠀⠀⣿⣿⡟⠛⠃⠀⠀⠀⠀⠛⠛⣿⣿⣿⣿⠛⠛⠀⠀⠀⠀⠘⠛⢻⣿⣿⠀⠀
              ⣶⣶⣿⣿⡇⠀⠀⠀⢸⣿⣷⣶⠀⣿⣿⣿⣿⠀⠀⠀⠀⣿⣿⣶⡆⢸⣿⣿⣶⣶
              ⣿⣿⣿⣿⡇⠀⠀⠀⢸⣿⠿⠿⠀⣿⣿⣿⣿⠀⠀⠀⠀⣿⣿⠿⠇⢸⣿⣿⣿⣿
              ⣿⣿⣿⣿⣧⣤⡄⠀⠀⠀⠀⣤⣤⣿⣿⣿⣿⣤⣤⠀⠀⠀⠀⢠⣤⣼⣿⣿⣿⣿
              ⣿⣿⣿⣿⣿⣿⣧⣤⣤⣤⣤⣿⣿⣿⣿⣿⣿⣿⣿⣤⣤⣤⣤⣼⣿⣿⣿⣿⣿⣿
              ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
              ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
              ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
              ⣿⣿⣿⣿⣿⠀⢹⣿⣿⣿⣿⣿⣿⡇⠀⠀⠘⣿⣿⣿⣿⣿⣿⡇⠀⣿⣿⣿⣿⣿
              ⣿⣿⡏⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⠁⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⢻⣿⣿
"

# Ghosts success in green
ghost_success() {
  echo -e "\033[1;32m$ghost\033[0m"
}

# Ghosts warning in yellow
ghost_warning() {
  echo -e "\033[1;33m$ghost\033[0m"
}

# Ghosts error in red
ghost_error() {
  echo -e "\033[1;31m$ghost\033[0m"
}

# Function to display the ABS name in blue
abs_name() {
  echo -e "\n\033[1;34m
        +-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+ 
        |A|r|c|h| |B|u|i|l|d| |S|y|s|t|e|m| 
        +-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+ 
  \033[0m"
}

# Function to update the system packages
update() {
  pac_word
  echo -e "\n\033[1;32mUpdate packages?\033[0m"
  read -r -n 1 -p "[y,N]: " ANSWER
  echo
  if [[ "$ANSWER" =~ ^[Yy]$ ]]; then
    pac_logo
    if sudo pacman -Syu --noconfirm; then
      ghost_success
    else
      ghost_error
      return 1
    fi
  else
    ghost_warning
    return 1
  fi
}

# Function to update AUR packages
update_aur() {
  pac_word
  echo -e "\n\033[1;32mUpdate AUR packages?\033[0m"
  read -r -n 1 -p "[y,N]: " ANSWER
  echo
  if [[ "$ANSWER" =~ ^[Yy]$ ]]; then
    pac_logo
    if paru -Sua --upgrademenu; then
      ghost_success
    else
      ghost_error
      return 1
    fi
  else
    ghost_warning
    return 1
  fi
}

# Function to check for updates
check_update() {
  mapfile -t updates < <(checkupdates)
  if [ "${#updates[@]}" -gt 0 ]; then
    echo -e "\n\033[1;32m${#updates[@]} updates\033[0m"
    for update in "${updates[@]}"; do
      echo -e "${update}"
    done
    return 0
  else
    echo -e "\n\033[1;33mNo updates available!\033[0m"
    return 1
  fi
}

# Function to check for AUR updates
check_update_aur() {
  mapfile -t aur_updates < <(paru -Qua)
  if [ "${#aur_updates[@]}" -gt 0 ]; then
    echo -e "\n\033[1;32m${#aur_updates[@]} updates\033[0m"
    for update in "${aur_updates[@]}"; do
      echo -e "${update}"
    done
    return 0
  else
    echo -e "\n\033[1;33mNo AUR updates available!\033[0m"
    return 1
  fi
}

# Function to display total packages
total_pkgs() {
  local pkg_all=$(pacman -Q | wc -l)
  local pkg_expl=$(pacman -Qe | wc -l)
  local pkg_deps=$(pacman -Qd | wc -l)
  local pkg_aur=$(pacman -Qm | wc -l)
  local size=$(du -sh /usr/bin | awk '{print $1}')

  echo -e "
               \033[1;34mPackages:      \033[0m $pkg_all\n \
              \033[1;34mExplicit:      \033[0m $pkg_expl\n \
              \033[1;34mDependencies:  \033[0m $pkg_deps\n \
              \033[1;34mAUR:           \033[0m $pkg_aur\n \
              \033[1;34mTotal Size:     \033[1;37m$size\033[0m\n"
}

# Main function to run the script
main() {
  arch_name
  total_pkgs
  if check_update; then
    update
  fi
  if check_update_aur; then
    update_aur
  fi
}

main
