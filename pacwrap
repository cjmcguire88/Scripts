#!/usr/bin/env bash

arch_name() {
  echo -e "\033[1;34m
           █████╗ ██████╗  ██████╗██╗  ██╗
          ██╔══██╗██╔══██╗██╔════╝██║  ██║
          ███████║██████╔╝██║     ███████║
          ██╔══██║██╔══██╗██║     ██╔══██║
          ██║  ██║██║  ██║╚██████╗██║  ██║
          ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝
        ██╗     ██╗███╗   ██╗██╗   ██╗██╗  ██╗
        ██║     ██║████╗  ██║██║   ██║╚██╗██╔╝
        ██║     ██║██╔██╗ ██║██║   ██║ ╚███╔╝ 
        ██║     ██║██║╚██╗██║██║   ██║ ██╔██╗ 
        ███████╗██║██║ ╚████║╚██████╔╝██╔╝ ██╗
        ╚══════╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚═╝  ╚═╝
  \033[0m"
}

pac_name() {
  echo -e "\033[1;36m
  ░       ░░░░      ░░░░      ░░░  ░░░░  ░░░      ░░░   ░░░  ░
  ▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒   ▒▒   ▒▒  ▒▒▒▒  ▒▒    ▒▒  ▒
  ▓       ▓▓▓  ▓▓▓▓  ▓▓  ▓▓▓▓▓▓▓▓        ▓▓  ▓▓▓▓  ▓▓  ▓  ▓  ▓
  █  ████████        ██  ████  ██  █  █  ██        ██  ██    █
  █  ████████  ████  ███      ███  ████  ██  ████  ██  ███   █
  \033[0m"
}
pac_logo() {
  echo -e "\033[1;33m
            ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣤⣤⣤⣤⣤⣤⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠀⠀⠀⠀⢀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠛⠻⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⡿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣤⣴⣿⣿⣿⣿⣿⡿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⠁⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀
            ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠋⠁⠀⠀⠀⠀⠀⣴⣿⣿⣿⣦⠀⠀⠀⣼⣿⣿⣿⡆⠀⠀⠀⣴⣿⣿⣿⣆
            ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⡟⠀⠀⠀⢿⣿⣿⣿⠏⠀⠀⠀⢿⣿⣿⣿⠏
            ⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣄⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠉⠉⠁⠀
            ⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠀⠀⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠀⠀⠀⠀⠉⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠛⠻⠿⠿⠟⠛⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  \033[0m"
}

ghost_logo() {
  echo -e "\033[1;31m
              ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
              ⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀
              ⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀
              ⠀⠀⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⠀⠀
              ⠀⠀⣿⣿⣿⣿⡟⠛⠛⠛⠛⣿⣿⣿⣿⣿⣿⣿⣿⠛⠛⠛⠛⢻⣿⣿⣿⣿⠀⠀
              ⠀⠀⣿⣿⡟⠛⠃⠀⠀⠀⠀⠛⠛⣿⣿⣿⣿⠛⠛⠀⠀⠀⠀⠘⠛⢻⣿⣿⠀⠀
              ⣶⣶⣿⣿⡇⠀⠀⠀⢸⣿⣷⣶⠀⣿⣿⣿⣿⠀⠀⠀⠀⣿⣿⣶⡆⢸⣿⣿⣶⣶
              ⣿⣿⣿⣿⡇⠀⠀⠀⢸⣿⠿⠿⠀⣿⣿⣿⣿⠀⠀⠀⠀⣿⣿⠿⠇⢸⣿⣿⣿⣿
              ⣿⣿⣿⣿⣧⣤⡄⠀⠀⠀⠀⣤⣤⣿⣿⣿⣿⣤⣤⠀⠀⠀⠀⢠⣤⣼⣿⣿⣿⣿
              ⣿⣿⣿⣿⣿⣿⣧⣤⣤⣤⣤⣿⣿⣿⣿⣿⣿⣿⣿⣤⣤⣤⣤⣼⣿⣿⣿⣿⣿⣿
              ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
              ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
              ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
              ⣿⣿⣿⣿⣿⠀⢹⣿⣿⣿⣿⣿⣿⡇⠀⠀⠘⣿⣿⣿⣿⣿⣿⡇⠀⣿⣿⣿⣿⣿
              ⣿⣿⡏⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⠁⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⢻⣿⣿
  \033[0m"
}

abs_name() {
  echo -e "\n\033[1;34m
        +-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+ 
        |A|r|c|h| |B|u|i|l|d| |S|y|s|t|e|m| 
        +-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+ 
  \033[0m"
}

compile_pkgs() {
  mapfile -t src_list <"$HOME/.build/src_list"
  for pkg in "$@"; do
    for src in "${src_list[@]}"; do
      #debug
      echo "$pkg - $src"
      if [ "${pkg%% *}" = "$src" ]; then
        flagged+="${pkg%% *}"
        #debug
        echo "{flagged[@]}"
        flagged+=" "
        #debug
        echo "{flagged[@]}"
      fi
    done
  done
  if [ -n "$flagged" ]; then
    echo -e "\n\033[1;34m:: \033[1;37mThese packages will be compiled:\033[0m"
    for pkg in $flagged; do
      echo "${pkg}"
    done
    read -r -n 1 -p "Proceed? [y,N]: " ANSWER
    if [[ $ANSWER =~ ^[Yy]$ ]]; then
      abs_name
      compile "${flagged[@]}"
    else
      echo -e "\n\033[1;33m:: \033[1;37mCancelled compilation!\033[0m"
      return 1
    fi
  else
    echo -e "\n\033[1;34m:: \033[1;37mNo packages to compile!\033[0m"
    return 0
  fi
}

update() {
  pac_name
  echo -e "\n\033[1;32mUpdate packages?\033[0m"
  read -r -n 1 -p "[y,N]: " ANSWER
  if [[ $ANSWER =~ ^[Yy]$ ]]; then
    pac_logo
    sudo pacman -Syu --noconfirm
    compile_pkgs "${updates[@]}"
    ghost_logo
  else
    ghost_logo
    return 1
  fi
}

update_aur() {
  pac_name
  echo -e "\n\033[1;32mUpdate AUR packages?\033[0m"
  read -r -n 1 -p "[y,N]: " ANSWER
  if [[ $ANSWER =~ ^[Yy]$ ]]; then
    pac_logo
    paru -Sua --upgrademenu
    ghost_logo
  else
    ghost_logo
    return 1
  fi
}

check_update() {
  mapfile -t updates < <(checkupdates)
  if [ -n "$updates" ]; then
    echo -e "\n\033[1;32m${#updates[@]} updates\033[0m"
    for update in "${updates[@]}"; do
      echo -e "${update}"
    done
    return 0
  else
    echo -e "\n\033[1;33mNo updates available!\033[0m"
    return 1
  fi
}

check_update_aur() {
  mapfile -t aur_updates < <(paru -Qua)
  if [ -n "$aur_updates" ]; then
    echo -e "\n\033[1;32m${#aur_updates[@]} updates\033[0m"
    for update in "${aur_updates[@]}"; do
      echo -e "${update}"
    done
    return 0
  else
    echo -e "\n\033[1;33mNo AUR updates available!\033[0m"
    return 1
  fi
}

total_pkgs() {
  local -r pkg_all=$(pacman -Q | wc -l)
  local -r pkg_expl=$(pacman -Qe | wc -l)
  local -r pkg_deps=$(pacman -Qd | wc -l)
  local -r pkg_aur=$(pacman -Qm | wc -l)
  local -r size=$(du -h /usr/bin | tail -1 | awk '{print $1}')

  echo -e "
               \033[1;34mPackages:      \033[0m $pkg_all\n \
              \033[1;34mExplicit:      \033[0m $pkg_expl\n \
              \033[1;34mDependencies:  \033[0m $pkg_deps\n \
              \033[1;34mAUR:           \033[0m $pkg_aur\n \
              \033[1;34mTotal Size:     \033[1;37m$size\033[0m\n"
}

main() {
  arch_name
  total_pkgs
  if check_update; then
    update
  fi
  if check_update_aur; then
    update_aur
  fi
}
main
